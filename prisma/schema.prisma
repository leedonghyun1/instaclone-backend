// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id Int @id @default(autoincrement())
  firstName String
  lastName String?
  username String @unique
  email String @unique
  password String
  bio String?
  avatar String?
  followers User[] @relation("FollowRelation")
  following User[] @relation("FollowRelation")
  photos Photo[]
  likes Like[]
  comments Comment[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  rooms Room[]
  messages Message[]
}

model Photo{
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int
  file String
  caption String?
  hashtags Hashtag[]
  likes Like[]
  comments Comment[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Hashtag{
  id Int @id @default(autoincrement())
  hashtag String @unique
  photos Photo[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Like {
  id Int @id @default(autoincrement())
  photo Photo @relation(fields: [photoId], references: [id], onDelete: Cascade)
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId Int
  photoId Int

  @@unique([userId, photoId])
}

model Comment {
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  photo Photo @relation(fields: [photoId], references: [id], onDelete: Cascade)
  payload String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId Int
  photoId Int
}

model Room {
  id Int @id @default(autoincrement())
  users User[]
  messages Message[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Message {
  id Int @id @default(autoincrement())
  payload String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  read Boolean @default(false)
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int
  room Room @relation(fields: [roomId], references: [id], onDelete: Cascade)
  roomId Int
}